<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://fackelm2.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://fackelm2.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-07-19T14:45:42+00:00</updated><id>https://fackelm2.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Dual Language in the Jekyll Al-Folio Theme</title><link href="https://fackelm2.github.io/blog/2024/al-folio-duallanguage/" rel="alternate" type="text/html" title="Dual Language in the Jekyll Al-Folio Theme"/><published>2024-07-19T12:28:00+00:00</published><updated>2024-07-19T12:28:00+00:00</updated><id>https://fackelm2.github.io/blog/2024/al-folio-duallanguage</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/al-folio-duallanguage/"><![CDATA[<p>Al-Folio is a Jekyll theme for academics.</p> <p>Al-Folio ist ein Jekyll-Theme für Akademiker.</p> <ul> <li><a href="https://github.com/kurtsson/jekyll-multiple-languages-plugin">https://github.com/kurtsson/jekyll-multiple-languages-plugin</a></li> <li><a href="https://george-gca.github.io/blog/2022/dual-language-al-folio/">https://george-gca.github.io/blog/2022/dual-language-al-folio/</a></li> </ul>]]></content><author><name></name></author><category term="linux"/><category term="linux"/><category term="al-folio"/><category term="jekyll"/><category term="tool"/><summary type="html"><![CDATA[Using the Al-Folio Theme with more languages]]></summary></entry><entry><title type="html">Markup for the Jekyll Al-Folio Theme</title><link href="https://fackelm2.github.io/blog/2024/al-folio-markup/" rel="alternate" type="text/html" title="Markup for the Jekyll Al-Folio Theme"/><published>2024-07-19T10:39:00+00:00</published><updated>2024-07-19T10:39:00+00:00</updated><id>https://fackelm2.github.io/blog/2024/al-folio-markup</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/al-folio-markup/"><![CDATA[<p>https://de.wikipedia.org/wiki/Jekyll_(Software):</p> <p>Jekyll ist eine in der Programmiersprache Ruby geschriebene Software, die zur Erstellung statischer Webseiten dient. Dabei kombiniert sie vereinfachte Markup-Texte mit Designvorlagen und erzeugt für jede Teilseite ein statisches Abbild als HTML-Datei.</p> <p>Der Jekyll-Quellcode wird unter der MIT-Lizenz als Open Source bereitgestellt.</p> <p>Häufig eingesetzt wird Jekyll zur Erstellung von Blogs, aber auch Softwaresysteme wie GitHub oder andere Content-Management-Systeme nutzen Jekyll im Hintergrund zur Erstellung von Webseiten.</p> <p>Al-folio Markup (Default: GitHub Flavored Markdown - GFM)</p> <p><a href="https://github.github.com/gfm/">https://github.github.com/gfm/</a></p>]]></content><author><name></name></author><category term="linux"/><category term="linux"/><category term="al-folio"/><category term="jekyll"/><category term="tool"/><summary type="html"><![CDATA[Using the Github Flavored Markdown in the Al-Folio Theme]]></summary></entry><entry><title type="html">Using i3 as a Linux window manager</title><link href="https://fackelm2.github.io/blog/2024/i3wm/" rel="alternate" type="text/html" title="Using i3 as a Linux window manager"/><published>2024-07-19T08:32:13+00:00</published><updated>2024-07-19T08:32:13+00:00</updated><id>https://fackelm2.github.io/blog/2024/i3wm</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/i3wm/"><![CDATA[<h2 id="i3-window-manger-install">i3 window manger install</h2> <p>i3 is my favorite linux window manager</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh"># apt install i3</span>
</code></pre></div></div> <p><a href="https://wiki.debian.org/i3">https://wiki.debian.org/i3</a></p> <p>–</p> <h2 id="key-combination">Key combination</h2> <table> <thead> <tr> <th>Key combination</th> <th>Action</th> </tr> </thead> <tbody> <tr> <td>ALT - Enter</td> <td>neues Fenster öffnen</td> </tr> <tr> <td>ALT - Pfeiltaste</td> <td>Fokus wechseln</td> </tr> <tr> <td>ALT - 1 / 2 / 3 ..</td> <td>= Workspace auswählen</td> </tr> <tr> <td>ALT - Pfeiltasten</td> <td>Fenster auwählen</td> </tr> <tr> <td>ALT - SHIFT - Pfeiltaste</td> <td>ausgewähltes Fenster verschieben</td> </tr> <tr> <td>ALT - E</td> <td>Alle Fenster Vertikal / Horizontal ausrichten</td> </tr> <tr> <td>ALT - SHIFT - Pfeil oben / unten  </td> <td>Fenster oben groß unten eingeteilt</td> </tr> <tr> <td>ALT - Umschalt + Q</td> <td>ausgewähltes Fenster schließen</td> </tr> <tr> <td>ALT - Umschalt - Nummer</td> <td>Fesnter auf Workspace verschieben</td> </tr> <tr> <td>ALT - r</td> <td>resize window with for example arrow keys up and down</td> </tr> <tr> <td>ALT - h</td> <td>next new window in this window horizontal tiled ..</td> </tr> <tr> <td>ALT - v</td> <td>next new window in this window vertical tiled ..</td> </tr> </tbody> </table> <p>–</p> <h2 id="customize-i3">Customize i3</h2> <p><a href="https://itsfoss.com/i3-customization/">https://itsfoss.com/i3-customization/</a></p> <p>After configuration Changes i3 must be restarted for the changes to take effect</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh"># i3-msg restart</span>
</code></pre></div></div> <blockquote> <p>i3 links</p> </blockquote> <p><a href="https://www.pro-linux.de/artikel/2/1526/i3-ein-tiling-fenstermanager.html">https://www.pro-linux.de/artikel/2/1526/i3-ein-tiling-fenstermanager.html</a></p> <p>hintergrund auf eine farbe setzen:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># xsetroot -solid "#333333"
</code></pre></div></div> <p>oder Program “feh” <a href="https://wiki.archlinux.org/title/Feh#As">https://wiki.archlinux.org/title/Feh#As</a></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># feh -g 640x480 -d -S filename /path/to/directory
</code></pre></div></div> <p>set wallpaper:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># feh --bg-scale /path/to/image.file
</code></pre></div></div> <p>scaling options: –bg-tile FILE –bg-center FILE –bg-max FILE –bg-fill FILE</p> <p><a href="https://linux-admin-blog.de/2022/04/17/i3-fenstermanager-layout-speichern-und-laden/">https://linux-admin-blog.de/2022/04/17/i3-fenstermanager-layout-speichern-und-laden/</a></p> <p>i3 fenster anlegen, dann abspeichern</p> <p>Fensternamen anzeigen</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># i3-msg -t get_workspaces
</code></pre></div></div> <p>Aktuelle Fensterkollektion abspeichern</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># i3-save-tree --workspace name_meines_workspaces &gt; $HOME/.config/i3/bt-layout.json
</code></pre></div></div>]]></content><author><name></name></author><category term="linux"/><category term="linux"/><category term="i3wm"/><category term="tool"/><summary type="html"><![CDATA[using and configure i3 window manager]]></summary></entry><entry><title type="html">Using Virtual Environment in Python</title><link href="https://fackelm2.github.io/blog/2024/python-venv/" rel="alternate" type="text/html" title="Using Virtual Environment in Python"/><published>2024-07-19T05:10:00+00:00</published><updated>2024-07-19T05:10:00+00:00</updated><id>https://fackelm2.github.io/blog/2024/python-venv</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/python-venv/"><![CDATA[<p>https://python.land/virtual-environments/virtualenv#Python_venv_activation</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">c++
https:</span><span class="c1">//python.land/virtual-environments/virtualenv#Python_venv_activation</span>
<span class="p">```</span>
</code></pre></div></div> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">https:</span><span class="c1">//python.land/virtual-environments/virtualenv#Python_venv_activation</span>
</code></pre></div></div> <p>For displaying code in a list item, you have to be aware of the indentation, as stated in this <a href="https://stackoverflow.com/questions/34987908/embed-a-code-block-in-a-list-item-with-proper-indentation-in-kramdown/38090598#38090598">Stackoverflow answer</a>. You must indent your code by <strong>(3 * bullet_indent_level)</strong> spaces. This is because kramdown (the markdown engine used by Jekyll) indentation for the code block in lists is determined by the column number of the first non-space character after the list item marker. For example:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">1.</span> We can put fenced code blocks inside nested bullets, too.
<span class="p">
   1.</span> Like this:<span class="sb">

      ```c
      https://python.land/virtual-environments/virtualenv#Python_venv_activation
      ```

</span><span class="p">   2.</span> The key is to indent your fenced block in the same line as the first character of the line.
</code></pre></div></div> <p>Which displays:</p> <ol> <li> <p>We can put fenced code blocks inside nested bullets, too.</p> <ol> <li> <p>Like this:</p> <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">https:</span><span class="c1">//python.land/virtual-environments/virtualenv#Python_venv_activation</span>
</code></pre></div> </div> </li> <li> <p>The key is to indent your fenced block in the same line as the first character of the line.</p> </li> </ol> </li> </ol> <p>By default, it does not display line numbers. If you want to display line numbers for every code block, you can set <code class="language-plaintext highlighter-rouge">kramdown.syntax_highlighter_opts.block.line_numbers</code> to true in your <code class="language-plaintext highlighter-rouge">_config.yml</code> file.</p> <p>tag</p> <p>{% highlight c++ linenos %} <br/> https://python.land/virtual-environments/virtualenv#Python_venv_activation <br/> {% endhighlight %}</p> <p>The keyword <code class="language-plaintext highlighter-rouge">linenos</code> triggers display of line numbers. Produces something like this:</p> <figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
<span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="nl">https:</span><span class="c1">//python.land/virtual-environments/virtualenv#Python_venv_activation</span>

<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure> <p>Markdown style:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">numbers</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">numbers</span><span class="p">:</span>
    <span class="n">echo</span> <span class="n">i</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="python"/><category term="python"/><summary type="html"><![CDATA[cheatsheat for using venv in python]]></summary></entry><entry><title type="html">Python links collection</title><link href="https://fackelm2.github.io/blog/2024/python-links/" rel="alternate" type="text/html" title="Python links collection"/><published>2024-07-19T05:09:00+00:00</published><updated>2024-07-19T05:09:00+00:00</updated><id>https://fackelm2.github.io/blog/2024/python-links</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/python-links/"><![CDATA[<p>VENV Link <a href="https://python.land/virtual-environments/virtualenv#Python_venv_activation">https://python.land/virtual-environments/virtualenv#Python_venv_activation</a></p> <p>more links Obsidian Tool https://amirpourmand.ir/posts/2023/how-to-sync-obsidian/</p> <p>Docker Cheat Sheat https://dockerlabs.collabnix.com/docker/cheatsheet/</p>]]></content><author><name></name></author><category term="python"/><category term="python"/><category term="links"/><summary type="html"><![CDATA[A collection of useful Python links]]></summary></entry><entry><title type="html">Unit-Tests with Pytest</title><link href="https://fackelm2.github.io/blog/2024/python-pytest/" rel="alternate" type="text/html" title="Unit-Tests with Pytest"/><published>2024-07-19T05:01:13+00:00</published><updated>2024-07-19T05:01:13+00:00</updated><id>https://fackelm2.github.io/blog/2024/python-pytest</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/python-pytest/"><![CDATA[<p>How pytest works ..</p> <p>Markdown style:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="n">numbers</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">numbers</span><span class="p">:</span>
    <span class="n">echo</span> <span class="n">i</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="python"/><category term="python"/><summary type="html"><![CDATA[Writing unit tests with the Pytest framework for Python]]></summary></entry></feed>