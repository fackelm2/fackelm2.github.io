<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://fackelm2.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://fackelm2.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-07-21T12:19:53+00:00</updated><id>https://fackelm2.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Markup for the Jekyll Al-Folio Theme</title><link href="https://fackelm2.github.io/blog/2024/al-folio-markup/" rel="alternate" type="text/html" title="Markup for the Jekyll Al-Folio Theme"/><published>2024-07-19T20:39:00+00:00</published><updated>2024-07-19T20:39:00+00:00</updated><id>https://fackelm2.github.io/blog/2024/al-folio-markup</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/al-folio-markup/"><![CDATA[<p>What is Markdown?</p> <p>Markdown is a plain text format for writing structured documents, based on conventions for indicating formatting in email and usenet posts. It was developed by John Gruber (with help from Aaron Swartz) and released in 2004 in the form of a syntax description and a Perl script (Markdown.pl) for converting Markdown to HTML. In the next decade, dozens of implementations were developed in many languages. Some extended the original Markdown syntax with conventions for footnotes, tables, and other document elements. Some allowed Markdown documents to be rendered in formats other than HTML. Websites like Reddit, StackOverflow, and GitHub had millions of people using Markdown. And Markdown started to be used beyond the web, to author books, articles, slide shows, letters, and lecture notes. <a href="https://github.github.com/gfm/#introduction">https://github.github.com/gfm/#introduction</a></p> <p>Al-folio Markup (Default: GitHub Flavored Markdown - GFM) <a href="https://github.github.com/gfm/">https://github.github.com/gfm/</a></p>]]></content><author><name></name></author><category term="linux"/><category term="linux"/><category term="al-folio"/><category term="jekyll"/><category term="tool"/><summary type="html"><![CDATA[Using the Github Flavored Markdown in the Al-Folio Theme]]></summary></entry><entry><title type="html">Markup for the Jekyll Al-Folio Theme</title><link href="https://fackelm2.github.io/blog/2024/al-folio-jekyll/" rel="alternate" type="text/html" title="Markup for the Jekyll Al-Folio Theme"/><published>2024-07-19T19:39:00+00:00</published><updated>2024-07-19T19:39:00+00:00</updated><id>https://fackelm2.github.io/blog/2024/al-folio-jekyll</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/al-folio-jekyll/"><![CDATA[<p>What is Jekyll? <a href="https://de.wikipedia.org/wiki/Jekyll_(Software)">https://de.wikipedia.org/wiki/Jekyll_(Software)</a></p> <p>Jekyll ist eine in der Programmiersprache Ruby geschriebene Software, die zur Erstellung statischer Webseiten dient. Dabei kombiniert sie vereinfachte Markup-Texte mit Designvorlagen und erzeugt für jede Teilseite ein statisches Abbild als HTML-Datei.</p> <p>Der Jekyll-Quellcode wird unter der MIT-Lizenz als Open Source bereitgestellt.</p> <p>Häufig eingesetzt wird Jekyll zur Erstellung von Blogs, aber auch Softwaresysteme wie GitHub oder andere Content-Management-Systeme nutzen Jekyll im Hintergrund zur Erstellung von Webseiten.</p> <p>to use the Al-Folio Theme you must follow the instructions on the Al-Folio github site:</p> <ul> <li>download /home/user/PycharmProjects/<name>.github.io</name></li> <li>change informations, text and images etc.</li> <li>start local <name>.github.io$</name></li> </ul> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo docker-compose up
</code></pre></div></div> <p>Use a Browser to connect to your instance</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>localhost:8080
</code></pre></div></div> <p>also a good instruction site on medium.com:<br/> <a href="https://medium.com/@carlbettosi/create-a-personal-academic-website-easily-with-github-pages-and-jekyll-minimal-coding-f1115eeb5ab7"> https://medium.com/@carlbettosi/create-a-personal-academic-website-easily-with-github-pages-and-jekyll-minimal-coding-f1115eeb5ab7</a></p>]]></content><author><name></name></author><category term="linux"/><category term="linux"/><category term="al-folio"/><category term="jekyll"/><category term="tool"/><summary type="html"><![CDATA[Using the Github Flavored Markdown in the Al-Folio Theme]]></summary></entry><entry><title type="html">Artificial Intelligenz</title><link href="https://fackelm2.github.io/blog/2024/ai/" rel="alternate" type="text/html" title="Artificial Intelligenz"/><published>2024-07-19T18:35:13+00:00</published><updated>2024-07-19T18:35:13+00:00</updated><id>https://fackelm2.github.io/blog/2024/ai</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/ai/"><![CDATA[<p>Links</p> <ul> <li>sharing ai models: https://huggingface.co/</li> <li>ollama ollama.ai <ul> <li>to load llama on linux</li> </ul> </li> <li>Youtube <a href="https://www.youtube.com/watch?v=Wjrdr0NU4Sk">https://www.youtube.com/watch?v=Wjrdr0NU4Sk</a></li> <li>Youtube <a href="https://www.youtube.com/watch?v=WxYC9-hBM_g">https://www.youtube.com/watch?v=WxYC9-hBM_g</a></li> </ul>]]></content><author><name></name></author><category term="linux"/><category term="linux"/><summary type="html"><![CDATA[Links AI]]></summary></entry><entry><title type="html">Display and control your Android device (scrcpy)</title><link href="https://fackelm2.github.io/blog/2024/android/" rel="alternate" type="text/html" title="Display and control your Android device (scrcpy)"/><published>2024-07-19T18:35:13+00:00</published><updated>2024-07-19T18:35:13+00:00</updated><id>https://fackelm2.github.io/blog/2024/android</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/android/"><![CDATA[<p>Display and control your Android device with scrcpy on Linux</p> <blockquote> <p>scrcpy provides display and control of Android devices connected on USB (or over TCP/IP). It does not require any root access. (man scrcpy)</p> </blockquote> <pre><code class="language-markup"># scrcpy 
scrcpy 2.4 &lt;https://github.com/Genymobile/scrcpy&gt;
ERROR: Could not find any ADB device
ERROR: Server connection failed
</code></pre> <p>first connect device to linux (developer mode must be active on Android device)</p> <pre><code class="language-markup"># scrcpy 
scrcpy 2.4 &lt;https://github.com/Genymobile/scrcpy&gt;
INFO: ADB device found:
INFO:     --&gt;   (usb)  R5CX31503MN                     device  SM_S928B
/usr/local/share/scrcpy/scrcpy-server: 1 file pushed, 0 skipped. 3.0 MB/s (69007 bytes in 0.022s)
[server] INFO: Device: [samsung] samsung SM-S928B (Android 14)
INFO: Renderer: opengl
INFO: OpenGL version: 4.6.0 NVIDIA 550.54.14
INFO: Trilinear filtering enabled
INFO: Texture: 1080x2336

</code></pre> <p>at this moment you get a Screen of your Android Device (see example picutures below)</p> <h3 id="example-pictures">Example pictures</h3> <p>Screenshots Android Samsung Ultra 24 Device</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/scrcpy-001-480.webp 480w,/assets/img/scrcpy-001-800.webp 800w,/assets/img/scrcpy-001-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/scrcpy-001.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/scrcpy-002-480.webp 480w,/assets/img/scrcpy-002-800.webp 800w,/assets/img/scrcpy-002-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/scrcpy-002.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div>]]></content><author><name></name></author><category term="android"/><category term="linux"/><category term="android"/><summary type="html"><![CDATA[Using scrcpy for remote control your Android device on Linux]]></summary></entry><entry><title type="html">Debian Suspend Mode Configuration</title><link href="https://fackelm2.github.io/blog/2024/debian-suspend/" rel="alternate" type="text/html" title="Debian Suspend Mode Configuration"/><published>2024-07-19T18:35:13+00:00</published><updated>2024-07-19T18:35:13+00:00</updated><id>https://fackelm2.github.io/blog/2024/debian-suspend</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/debian-suspend/"><![CDATA[<p>todo ..</p> <pre><code class="language-markup">
nts to blank the screen out of the box. To prevent, try putting:
$ xset dpms 0 0 0 &amp;&amp; xset s noblank &amp;&amp; xset s off
in .bashrc

to send to suspend:
$systemctl suspend

for systems which should never attempt anay type of suspension, the targets scan be disabled at the systemd level:
$sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target 

to re-enable hibernate and supend use the following command:
$sudo systemctl unmaks sleep.target suspend.target hibernate.target hybrid-sleep.target 

Also you can create /etc/systemd/sleep.conf.d/nosuspend.conf :
[Sleep]
AllowSuspend=no
AllowHibernation=no
AllowSuspendThenHibernate=no
AllowHybridSleep=no

The log for suspend and resume processes are in file 
$cat /var/log/pm-suspend.log

Kernel Suspend testing facility
freezer
devices
platform
processors
core

$systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target
Created symlink /etc/systemd/system/sleep.target → /dev/null.
Created symlink /etc/systemd/system/suspend.target → /dev/null.
Created symlink /etc/systemd/system/hibernate.target → /dev/null.
Created symlink /etc/systemd/system/hybrid-sleep.target → /dev/null.

</code></pre>]]></content><author><name></name></author><category term="linux"/><category term="linux"/><category term="todo"/><summary type="html"><![CDATA[Debian suspend mode]]></summary></entry><entry><title type="html">How to update Linux Debian</title><link href="https://fackelm2.github.io/blog/2024/linux-aptitude/" rel="alternate" type="text/html" title="How to update Linux Debian"/><published>2024-07-19T18:35:13+00:00</published><updated>2024-07-19T18:35:13+00:00</updated><id>https://fackelm2.github.io/blog/2024/linux-aptitude</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/linux-aptitude/"><![CDATA[<h2 id="update-debian">Update debian</h2> <p>Debian update</p> <pre><code class="language-markup"># sudo apt-get update
</code></pre> <p>or with aptitude (F10)</p> <ol> <li>Paketliste aktualisieren (u)</li> <li>aktualisierbare markieren (U)</li> <li>Installieren/Entfernen von Paketen (g)</li> </ol> <pre><code class="language-markup"># sudo aptitude update
</code></pre> <p>update are relevant for example also after changes in source.list like adding “contrib non-free”</p>]]></content><author><name></name></author><category term="linux"/><category term="linux"/><category term="todo"/><summary type="html"><![CDATA[update mechanism for linux debian]]></summary></entry><entry><title type="html">SSL BigSix as soundcard for Linux</title><link href="https://fackelm2.github.io/blog/2024/linux-bigsix/" rel="alternate" type="text/html" title="SSL BigSix as soundcard for Linux"/><published>2024-07-19T18:35:13+00:00</published><updated>2024-07-19T18:35:13+00:00</updated><id>https://fackelm2.github.io/blog/2024/linux-bigsix</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/linux-bigsix/"><![CDATA[<p>No problems. Linux Debian see the BigSix after USB Connect. I use pavucontrol for configurations.</p> <pre><code class="language-markup"># pavucontrol 
</code></pre> <p><a href="https://wiki.debian.org/PulseAudio#Basic_Configuration">https://wiki.debian.org/PulseAudio#Basic_Configuration</a></p> <p>To reread the config files ~/.config/pulse/daemon.conf and /etc/pulse/daemon.conf, one can restart pulse:</p> <pre><code class="language-markup">$ systemctl --user restart pulseaudio.service
</code></pre> <ul> <li>ALSA (works for Bitwig and BiGSiX)</li> <li>PulseAudio is on top of ALSA</li> <li>pavucontrol (optional package for PulseAudio) or pamixer</li> </ul> <p>Stop running the PulseAudio daemon for a while</p> <p>If you suspect trouble with a running PulseAudio daemon in your systemd user session, you can switch it off:</p> <pre><code class="language-markup">systemctl --user mask pulseaudio.socket
systemctl --user stop pulseaudio.service
</code></pre> <p>and then to switch it on:</p> <pre><code class="language-markup">systemctl --user unmask pulseaudio.socket
systemctl --user start pulseaudio.service
</code></pre> <p>More bash history infos ;-) (todo)</p> <pre><code class="language-markup">#wire plumber conrtrol CLI 
$wpctl status

aplay -lL (liste der Karten / Devices)

TIPPS: (NOT FOR ME)
amixer -c2 #or correct card index (Angabe der Kartennummer von "aplay -lL" 
pactl list cards
pactl list sources
#During a recording
pactl list source-outputs

PIPEWIRE
Pipwire activ?
systemctl status --user pipewire

pipewire
pipewire -h
pipewire --version
systemctl --user restart pipewire.service

w-link -l
pw-link -o
pw-link -i
pw-link -l -o -I
pw-link -l -i -I
pw-link -l 98 89
pw-link -l 107 89
pw-link -h
pw-link -d 96

pw-mon | egrep "card_name" (zeigt alle erkannten devices an)
pw-mon | grep SiX 
pw-mon | egrep "SiX"
pw-mon 

########################################################################
speaker-test (vorsicht rauschen laut)
speaker-test -c 2 -t /usr/lib/libreoffice/share/gallery/sounds/applause.wav
speaker-test -c 2 -t wav
########################################################################
SHOW AUDIO DEVICES (no usb?)
lspci | grep Audio 


lspci card0
lspci -t
lspci
########################################################################
vi /etc/pulse/client.conf

multimedia-jack
qjackctl
JACK
########################################################################
Alsa

aplay -l (list all soundcards and digital audio devices)
aplay -L (list device names)
aplay -D (select PCM by name)

aplay -vv /usr/lib/libreoffice/share/gallery/sounds/applause.wav
aplay -vv -D front:CARD=SiX,DEV=0 /usr/lib/libreoffice/share/gallery/sounds/applause.wav
aplay -vv -D usbstream:CARD=SiX,DEV=0 /usr/lib/libreoffice/share/gallery/sounds/applause.wav
aplay -vv -D dmix:CARD=SiX,DEV=0 /usr/lib/libreoffice/share/gallery/sounds/applause.wav
aplay -vv -D plughw:CARD=SiX,DEV=0 /usr/lib/libreoffice/share/gallery/sounds/applause.wav

alsamixer &amp;
cd /proc/asound/card0
cd /proc/asound/card1


cd /proc/asound/card2
more /proc/asound/cards (to find all cards !)
more /proc/asound/card2/id (SiX)
more /proc/asound/card2/pcm0c/sub0/hw_params
more /proc/asound/card2/stream0
more /proc/asound/devices (to show all audio devices ..)

more /proc/asound/oss/sndstat 
more /proc/asound/oss/devices 
more /proc/asound/pcm0c/sub0/info 
more /proc/asound/pcm0c/sub0/hw_params 
more /proc/asound/pcm0c/sub0/status 
more /proc/asound/pcm0p/info 

more /proc/asound/oss/sndstat
Sound Driver:3.8.1a-980706 (ALSA emulation code)
Card config: 
HDA Intel PCH at 0xa3230000 irq 127
HDA NVidia at 0xa3080000 irq 17
Solid State Logic BiG SiX at usb-0000:00:14.0-5, high speed
Blackmagic Design Blackmagic Design at usb-0000:00:14.0-6, high speed
Audio devices: NOT ENABLED IN CONFIG


more /proc/asound/pcm
00-00: ALC892 Analog : ALC892 Analog : playback 1 : capture 1
00-01: ALC892 Digital : ALC892 Digital : playback 1
00-02: ALC892 Alt Analog : ALC892 Alt Analog : capture 1
01-03: HDMI 0 : HDMI 0 : playback 1
01-07: HDMI 1 : HDMI 1 : playback 1
01-08: HDMI 2 : HDMI 2 : playback 1
01-09: HDMI 3 : HDMI 3 : playback 1
02-00: USB Audio : USB Audio : playback 1 : capture 1
03-00: USB Audio : USB Audio : capture 1

more /proc/asound/SiX/pcm0p/sub0/info
stream: PLAYBACK

more /proc/asound/SiX/pcm0c/sub0/info
stream: CAPTURE

more /proc/asound/Design/stream0
Blackmagic Design Blackmagic Design at usb-0000:00:14.0-6, high speed : USB Audio

</code></pre>]]></content><author><name></name></author><category term="linux"/><category term="linux"/><category term="todo"/><summary type="html"><![CDATA[Using BigSix as a soundcard for Linux Debian]]></summary></entry><entry><title type="html">Linux Debian and DMX</title><link href="https://fackelm2.github.io/blog/2024/linux-dmx/" rel="alternate" type="text/html" title="Linux Debian and DMX"/><published>2024-07-19T18:35:13+00:00</published><updated>2024-07-19T18:35:13+00:00</updated><id>https://fackelm2.github.io/blog/2024/linux-dmx</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/linux-dmx/"><![CDATA[<p>todo ..</p> <pre><code class="language-markup">
linux dmx steuerung:
qlcplus
controller supportet:
https://shop.dmxking.com/eDMX4-MAX_p_60.html


(separat zu installieren)
magicq

https://chamsyslighting.com/pages/magicq-downloads
</code></pre>]]></content><author><name></name></author><category term="linux"/><category term="linux"/><category term="todo"/><summary type="html"><![CDATA[Linux DMX Control]]></summary></entry><entry><title type="html">Linux Debian Errors and Solutions</title><link href="https://fackelm2.github.io/blog/2024/linux-errors/" rel="alternate" type="text/html" title="Linux Debian Errors and Solutions"/><published>2024-07-19T18:35:13+00:00</published><updated>2024-07-19T18:35:13+00:00</updated><id>https://fackelm2.github.io/blog/2024/linux-errors</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/linux-errors/"><![CDATA[<h3 id="ldconfig-not-found">ldconfig not found</h3> <pre><code class="language-markup">$ echo $PATH
/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games

# export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
</code></pre>]]></content><author><name></name></author><category term="linux"/><category term="linux"/><category term="todo"/><summary type="html"><![CDATA[Linux errors]]></summary></entry><entry><title type="html">Linux GUI</title><link href="https://fackelm2.github.io/blog/2024/linux-gui/" rel="alternate" type="text/html" title="Linux GUI"/><published>2024-07-19T18:35:13+00:00</published><updated>2024-07-19T18:35:13+00:00</updated><id>https://fackelm2.github.io/blog/2024/linux-gui</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/linux-gui/"><![CDATA[<p>todo …</p> <pre><code class="language-markup">aktuelle einstellung:
$systemctl get-default
graphical.target

$systemctl set-default multi-user.target
</code></pre>]]></content><author><name></name></author><category term="linux"/><category term="linux"/><category term="todo"/><summary type="html"><![CDATA[Linux GUI (todo)]]></summary></entry></feed>