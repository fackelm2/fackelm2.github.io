<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://fackelm2.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://fackelm2.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-09-23T17:14:44+00:00</updated><id>https://fackelm2.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Android Analyse</title><link href="https://fackelm2.github.io/blog/2024/android-analyse/" rel="alternate" type="text/html" title="Android Analyse"/><published>2024-09-22T20:00:10+00:00</published><updated>2024-09-22T20:00:10+00:00</updated><id>https://fackelm2.github.io/blog/2024/android-analyse</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/android-analyse/"><![CDATA[<p>draft - english - Translated with DeepL.com (free version)</p> <p>The main difference between the two approaches lies in the methodological focus. While dynamic analysis and behavioral analysis take a broader approach that comprehensively examines the behavior and functioning of the app, experimental validation focuses specifically on identifying the artifacts generated by user actions.</p> <p>In summary, experimental validation can be described as a specific form of dynamic analysis that aims to understand the origin and meaning of forensic artifacts.</p> <h3 id="experimental-artifact-analysis--experimental-validation-forensic-verification-through-reproduction">Experimental artifact analysis / Experimental validation (forensic verification) through reproduction</h3> <p>In digital forensics, this describes the process by which known actions are performed in a controlled environment on test devices in order to compare the resulting artifacts with those from the examined backup. compared. This makes it possible to analyze the behavior of the app and assign specific artifacts to specific user actions. to specific user actions. This method ensures that the interpretation of the artifacts is based on well-founded, verifiable verifiable observations, which is particularly important in the context of court reports.</p> <p>Translated with DeepL.com (free version)</p> <h3 id="dynamic-analysis">Dynamic analysis</h3> <p>Dynamic analysis is a research method that involves observing a system, an application or software during its execution. or software during its execution. The aim is to record the behavior and analyze the resulting artefacts in real time. In forensics, the app is launched directly on a test device or in a sandbox environment, whereupon the actions performed and data generated are monitored. In this context, dynamic analysis is an important part of experimental validation, especially when the app is actively used to generate artifacts.</p> <h3 id="behavioral-analysis">Behavioral analysis</h3> <p>Behavioral analysis goes one step further and focuses on the detailed observation and documentation of the actions of the actions that a software or app performs during runtime. It examines how the app reacts to inputs, which network connections are established, how it stores data and what traces are left behind on the device. Behavioral analysis can therefore also include aspects of security and functionality, not just forensic artifacts.</p> <hr/> <p>draft - german</p> <p>Der wesentliche Unterschied zwischen den beiden Vorgehensweisen liegt im methodischen Fokus. Während die dynamische Analyse und Verhaltensanalyse einen breiteren Ansatz verfolgen, der das Verhalten und die Funktionsweise der App umfassend untersucht, konzentriert sich die experimentelle Validierung spezifisch darauf, die durch Benutzeraktionen erzeugten Artefakte zu identifizieren.</p> <p>Zusammenfassend kann die experimentelle Validierung als eine spezifische Form der dynamischen Analyse bezeichnet werden, die darauf abzielt, die Herkunft und Bedeutung von forensischen Artefakten zu verstehen.</p> <h3 id="experimentelle-validierung-forensische-verifikation-durch-reproduktion">Experimentelle Validierung (forensische Verifikation durch Reproduktion)</h3> <p>Die experimentelle Validierung führt eine bekannte Handlung in einer kontrollierten Umgebung auf Testgeräten durch, um die resultierenden Artefakte mit denen aus der untersuchten Sicherung zu vergleichen. Dies ermöglicht es, das Verhalten der App zu analysieren und spezifische Artefakte bestimmten Benutzeraktionen zuzuordnen. Diese Methode stellt sicher, dass die Interpretation der Artefakte auf fundierten, überprüfbaren Beobachtungen beruht, was vor allem im Kontext von Gerichtsgutachten von großer Bedeutung ist.</p> <h3 id="dynamische-analyse">Dynamische Analyse</h3> <p>Die dynamische Analyse bezeichnet eine Untersuchungsmethode, welche die Beobachtung eines Systems, einer Applikation oder einer Software während ihrer Ausführung zum Gegenstand hat. Ziel ist die Erfassung des Verhaltens sowie die Analyse der entstehenden Artefakte in Echtzeit. In der Forensik erfolgt der Start der App direkt auf einem Testgerät oder in einer Sandbox-Umgebung, woraufhin eine Überwachung der durchgeführten Aktionen und generierten Daten stattfindet. Die dynamische Analyse stellt in diesem Kontext einen wichtigen Bestandteil der experimentellen Validierung dar, insbesondere bei einer aktiven Nutzung der App zur Artefakt-Erzeugung.</p> <h3 id="verhaltensanalyse">Verhaltensanalyse</h3> <p>Die Verhaltensanalyse geht einen Schritt weiter und fokussiert sich auf die detaillierte Beobachtung und Dokumentation der Aktionen, die eine Software oder App während der Laufzeit durchführt. Dabei wird untersucht, wie die App auf Eingaben reagiert, welche Netzwerkverbindungen aufgebaut werden, wie sie Daten speichert und welche Spuren auf dem Gerät hinterlassen werden. Die Verhaltensanalyse kann somit auch Aspekte der Sicherheit und der Funktionalität umfassen, nicht nur forensische Artefakte.</p>]]></content><author><name></name></author><category term="android"/><category term="android"/><category term="forensics"/><summary type="html"><![CDATA[Android Analyse Definitions]]></summary></entry><entry><title type="html">Sreaming Atemmini</title><link href="https://fackelm2.github.io/blog/2024/stream-atemmini/" rel="alternate" type="text/html" title="Sreaming Atemmini"/><published>2024-09-14T10:00:10+00:00</published><updated>2024-09-14T10:00:10+00:00</updated><id>https://fackelm2.github.io/blog/2024/stream-atemmini</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/stream-atemmini/"><![CDATA[<p>draft</p> <p>Stremaing in OBS with ATEM MINI and Linux</p> <pre><code class="language-commandline">switcher-control





</code></pre> <p>https://forum.blackmagicdesign.com/viewtopic.php?f=4&amp;t=121709</p> <p>I am using Linux Mint 19.3 to display Bible texts. I set up ATEM in Linux as a monitor with resolutions of 1080 and 720, other resolutions are not displayed. OBS Studio sees ATEM perfectly.</p>]]></content><author><name></name></author><category term="Streaming"/><category term="streaming"/><summary type="html"><![CDATA[Steraming with Linux and Atemmini]]></summary></entry><entry><title type="html">GitHub Copilot</title><link href="https://fackelm2.github.io/blog/2024/copilot-github/" rel="alternate" type="text/html" title="GitHub Copilot"/><published>2024-09-13T18:00:10+00:00</published><updated>2024-09-13T18:00:10+00:00</updated><id>https://fackelm2.github.io/blog/2024/copilot-github</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/copilot-github/"><![CDATA[<p>draft</p> <p>GitHub Copilot in the CLI</p> <p>” GitHub Copilot in the CLI is an extension for GitHub CLI which provides a chat-like interface in the terminal that allows you to ask questions about the command line. You can ask Copilot in the CLI to suggest a command for your use case with gh copilot suggest, or to explain a command you’re curious about with gh copilot explain.</p> <p>For use cases, enabling, and limitations, see “GitHub Copilot in the CLI”.</p> <p>For what data is collected, used, and shared, see “Privacy Policies”.</p> <p>For help troubleshooting connectivity, see “Troubleshooting network errors for GitHub Copilot”. “</p> <p><a href="https://github.com/github/gh-copilot" title="https://github.com/github/gh-copilot">GitHub Copilot</a></p> <p>gh is GitHub on the command line. It brings pull requests, issues, and other GitHub concepts to the terminal next to where you are already working with git and your code.</p> <p><a href="https://github.com/cli/cli" title="https://github.com/cli/cli">GitHub CLI</a></p>]]></content><author><name></name></author><category term="programming"/><category term="programming"/><category term="github"/><category term="copilot"/><summary type="html"><![CDATA[GitHub Copilot]]></summary></entry><entry><title type="html">Android Aleap</title><link href="https://fackelm2.github.io/blog/2024/android-aleap/" rel="alternate" type="text/html" title="Android Aleap"/><published>2024-09-13T18:00:10+00:00</published><updated>2024-09-13T18:00:10+00:00</updated><id>https://fackelm2.github.io/blog/2024/android-aleap</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/android-aleap/"><![CDATA[<p>draft</p> <p><a href="https://github.com/abrignoni/ALEAPP" title="https://github.com/abrignoni/ALEAPP">Aleap on GitHub</a></p> <p><a href="https://cellebrite.com/en/getting-started-with-ileap-and-aleap-a-fundamental-approach/" title="https://cellebrite.com/en/getting-started-with-ileap-and-aleap-a-fundamental-approach/">Android Aleap Cellebrite Infos</a></p> <p><a href="https://www.youtube.com/watch?v=mM4rbFh4rqg" title="https://www.youtube.com/watch?v=mM4rbFh4rqg">Add Artefacts on Aleap</a></p>]]></content><author><name></name></author><category term="Android"/><category term="Android"/><category term="Forensic"/><summary type="html"><![CDATA[Andoid Aleap]]></summary></entry><entry><title type="html">Android Programming</title><link href="https://fackelm2.github.io/blog/2024/android-adb/" rel="alternate" type="text/html" title="Android Programming"/><published>2024-09-10T19:00:10+00:00</published><updated>2024-09-10T19:00:10+00:00</updated><id>https://fackelm2.github.io/blog/2024/android-adb</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/android-adb/"><![CDATA[<p>draft</p> <p>adb</p> <p><a href="https://developer.android.com/tools/adb?hl=de" title="https://developer.android.com/tools/adb?hl=de">android developer adb</a></p> <p>print all users on the system</p> <pre><code class="language-commandline">pm list users
pm list packages -f
pm list permissions -f

adb backup

</code></pre> <p>pull /system, /sdcard, /data/app/<packagename>, /data/system/uiderrors.txt</packagename></p> <pre><code class="language-commandline">adb pull remote local
</code></pre> <p>Get Path to pull ..</p> <pre><code class="language-commandline">pm list packages -f &lt;packagename&gt;
adb pull &lt;path-to-apk&gt;
</code></pre>]]></content><author><name></name></author><category term="android"/><category term="android"/><category term="programming"/><summary type="html"><![CDATA[Android Programming]]></summary></entry><entry><title type="html">Android Bugreport</title><link href="https://fackelm2.github.io/blog/2024/android-bugreport/" rel="alternate" type="text/html" title="Android Bugreport"/><published>2024-09-10T19:00:10+00:00</published><updated>2024-09-10T19:00:10+00:00</updated><id>https://fackelm2.github.io/blog/2024/android-bugreport</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/android-bugreport/"><![CDATA[<p>draft</p> <p><a href="https://developer.android.com/studio/debug/bug-report?hl=de" title="https://developer.android.com/studio/debug/bug-report?hl=de">Android Bugreport</a></p> <p><a href="https://source.android.com/docs/core/tests/debug/read-bug-reports?hl=de" title="https://source.android.com/docs/core/tests/debug/read-bug-reports?hl=de">Read Bugreport</a></p> <p><a href="https://support.avast.com/de-de/article/create-android-bug-report/#pc" title="https://support.avast.com/de-de/article/create-android-bug-report/#pc">Create Bugreport (avast)</a></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb bugreport 

</code></pre></div></div>]]></content><author><name></name></author><category term="forensic"/><category term="android"/><category term="forensic"/><summary type="html"><![CDATA[Android Bugreport]]></summary></entry><entry><title type="html">Android Log</title><link href="https://fackelm2.github.io/blog/2024/android-log/" rel="alternate" type="text/html" title="Android Log"/><published>2024-09-10T19:00:10+00:00</published><updated>2024-09-10T19:00:10+00:00</updated><id>https://fackelm2.github.io/blog/2024/android-log</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/android-log/"><![CDATA[<p>draft</p> <p><a href="https://source.android.com/docs/core/tests/debug/understanding-logging?hl=de" title="https://source.android.com/docs/core/tests/debug/understanding-logging?hl=de">Android Log</a></p> <p>LogExtractor: Extracting Digital Evidence From Android Log Messages Via String &amp; Taint Analysis</p> <p><a href="https://www.youtube.com/watch?v=-0Tm7Xu0Dzs" title="https://www.youtube.com/watch?v=-0Tm7Xu0Dzs">Android Log Extract YT</a></p> <p><a href="https://www.forensicfocus.com/webinars/logextractor-extracting-digital-evidence-from-android-log-messages-via-string-taint-analysis/" title="https://www.forensicfocus.com/webinars/logextractor-extracting-digital-evidence-from-android-log-messages-via-string-taint-analysis/">Android Log Extract</a></p>]]></content><author><name></name></author><category term="android"/><category term="android"/><category term="security"/><category term="forensic"/><summary type="html"><![CDATA[Android Log]]></summary></entry><entry><title type="html">Android Programming</title><link href="https://fackelm2.github.io/blog/2024/android-programming/" rel="alternate" type="text/html" title="Android Programming"/><published>2024-09-10T19:00:10+00:00</published><updated>2024-09-10T19:00:10+00:00</updated><id>https://fackelm2.github.io/blog/2024/android-programming</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/android-programming/"><![CDATA[<p>draft</p> <p><a href="https://medium.com/make-android" title="https://medium.com/make-android">Android Programming on Medium</a></p>]]></content><author><name></name></author><category term="android"/><category term="android"/><category term="programming"/><summary type="html"><![CDATA[Android Programming]]></summary></entry><entry><title type="html">Android Security</title><link href="https://fackelm2.github.io/blog/2024/android-security/" rel="alternate" type="text/html" title="Android Security"/><published>2024-09-10T19:00:10+00:00</published><updated>2024-09-10T19:00:10+00:00</updated><id>https://fackelm2.github.io/blog/2024/android-security</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/android-security/"><![CDATA[<p>draft</p> <p><a href="https://www.youtube.com/watch?v=0VjHNfUmYFg" title="https://www.youtube.com/watch?v=0VjHNfUmYFg">Security Conference HackInBo</a></p>]]></content><author><name></name></author><category term="android"/><category term="android"/><category term="security"/><summary type="html"><![CDATA[Android Security]]></summary></entry><entry><title type="html">Android Dumpsys</title><link href="https://fackelm2.github.io/blog/2024/android-dumpsys/" rel="alternate" type="text/html" title="Android Dumpsys"/><published>2024-09-10T18:00:10+00:00</published><updated>2024-09-10T18:00:10+00:00</updated><id>https://fackelm2.github.io/blog/2024/android-dumpsys</id><content type="html" xml:base="https://fackelm2.github.io/blog/2024/android-dumpsys/"><![CDATA[<p>draft</p> <p>Example (Get all Databases, Diskstats (of package name), ..)</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dumpsys dbinfo -v 
dumpsys diskstats 
dumpsys notifications
dumpsys notifications --noredact
dumpsys package
dumpsys usagestats
dumpsys vibrator
dumpsys wifi

</code></pre></div></div> <p><a href="https://developer.android.com/tools/dumpsys?hl=de" title="https://developer.android.com/tools/dumpsys?hl=de">Android Dumpsys</a></p> <p><a href="https://ccdcoe.org/uploads/2021/03/Android-Dumpsys-Analysis-to-Indicate-Driver-Distraction.pdf" title="https://ccdcoe.org/uploads/2021/03/Android-Dumpsys-Analysis-to-Indicate-Driver-Distraction.pdf">Android Dumpsys Analysis</a></p> <p><a href="https://ccdcoe.org/library/publications/android-dumpsys-analysis-to-indicate-driver-distraction/" title="https://ccdcoe.org/library/publications/android-dumpsys-analysis-to-indicate-driver-distraction/">Android Dumpsys Analysis 1</a></p> <p><a href="https://stackoverflow.com/questions/11201659/whats-the-android-adb-shell-dumpsys-tool-and-what-are-its-benefits" title="https://stackoverflow.com/questions/11201659/whats-the-android-adb-shell-dumpsys-tool-and-what-are-its-benefits">Stackoverflow dumpsys</a></p> <p><a href="https://medium.com/make-android/android-debugging-using-dumpsys-9bf1de695dcc" title="https://medium.com/make-android/android-debugging-using-dumpsys-9bf1de695dcc">Android Debugging using dumpsys</a></p> <p><a href="https://www.repeato.app/demystifying-adb-shells-dumpsys-command-and-its-benefits-for-android-development/" title="https://www.repeato.app/demystifying-adb-shells-dumpsys-command-and-its-benefits-for-android-development/">dumpsys commands</a></p>]]></content><author><name></name></author><category term="forensic"/><category term="android"/><category term="forensic"/><summary type="html"><![CDATA[Android Dumpsys]]></summary></entry></feed>